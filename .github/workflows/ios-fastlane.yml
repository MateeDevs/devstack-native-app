name: iOS - Fastlane Swift

on:
  push:
    branches:
      - feature/fastlane-swift

jobs:
  # build:
  #   name: Create new build
  #   runs-on: [self-hosted, ios-build]
  #   timeout-minutes: 15
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #       with:
  #         clean: false
  #     - name: Setup tools
  #       working-directory: ios
  #       run: ./scripts/setup.sh
  #     - name: Build KMP
  #       working-directory: ios
  #       run: ./scripts/build-kmp.sh release true
  #     - name: Prepare App Store Connect API key file
  #       env:
  #         APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
  #       working-directory: ios
  #       run: echo "$APP_STORE_CONNECT_API_KEY_CONTENT" > AuthKey_Matee.p8
  #     - name: Create a new Alpha build
  #       env:
  #         BUILD_NUMBER: $(echo `date +"%y%m%d%H%M"`)
  #       working-directory: ios
  #       run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane buildAlphaLane

  # deploy-alpha:
  #   name: Deploy alpha
  #   needs: build
  #   runs-on: [self-hosted, ios-internal]
  #   timeout-minutes: 15
  #   steps:
  #     - name: Upload the Alpha build to the TestFlight
  #       env:
  #         APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
  #         SLACK_URL: ${{ secrets.FASTLANE_SLACK_URL }}
  #         DISTRIBUTE_EXTERNAL: false
  #       working-directory: ios
  #       run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane uploadTestFlightAlphaLane

  # test:
  #   name: Run tests
  #   runs-on: [self-hosted, ios-build]
  #   timeout-minutes: 15
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #       with:
  #         clean: false
  #     - name: Setup tools
  #       working-directory: ios
  #       run: ./scripts/setup.sh
  #     - name: Build KMP
  #       working-directory: ios
  #       run: ./scripts/build-kmp.sh debug false
  #     - name: Run tests
  #       working-directory: ios
  #       run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane testAlphaLane

  build:
    name: Create new builds
    runs-on: [self-hosted, ios-build]
    timeout-minutes: 60
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          clean: false
      - name: Setup tools
        working-directory: ios
        run: ./scripts/setup.sh
      - name: Build KMP
        working-directory: ios
        run: ./scripts/build-kmp.sh release true
      - name: Generate build number
        run: echo "BUILD_NUMBER=$(echo `date +"%y%m%d%H%M"`)" >> $GITHUB_ENV
      - name: Prepare App Store Connect API key file
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
        working-directory: ios
        run: echo "$APP_STORE_CONNECT_API_KEY_CONTENT" > AuthKey_Matee.p8
      - name: Create builds
        env:
          BUILD_NUMBER: $(echo `date +"%y%m%d%H%M"`)
        working-directory: ios
        run: |
          swift run --package-path CI/FastlaneRunner fastlaneRunner lane buildAlphaLane
          swift run --package-path CI/FastlaneRunner fastlaneRunner lane buildBetaLane
          swift run --package-path CI/FastlaneRunner fastlaneRunner lane buildProductionLane
          swift run --package-path CI/FastlaneRunner fastlaneRunner lane tagProductionLane

  deploy-alpha:
    name: Deploy alpha
    needs: build
    runs-on: [self-hosted, ios-alpha]
    timeout-minutes: 120
    steps:
      - name: Upload the Alpha build to the TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
          SLACK_URL: ${{ secrets.FASTLANE_SLACK_URL }}
          DISTRIBUTE_EXTERNAL: true
        working-directory: ios
        run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane uploadTestFlightAlphaLane

  deploy-beta:
    name: Deploy beta
    needs: build
    runs-on: [self-hosted, ios-beta]
    timeout-minutes: 120
    steps:
      - name: Upload the Beta build to the TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
          SLACK_URL: ${{ secrets.FASTLANE_SLACK_URL }}
          DISTRIBUTE_EXTERNAL: true
        working-directory: ios
        run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane uploadTestFlightBetaLane

  deploy-production:
    name: Deploy production
    needs: build
    runs-on: [self-hosted, ios-prod]
    timeout-minutes: 120
    steps:
      - name: Upload the Production build to the TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_MATEE }}
          SLACK_URL: ${{ secrets.FASTLANE_SLACK_URL }}
          DISTRIBUTE_EXTERNAL: true
        working-directory: ios
        run: swift run --package-path CI/FastlaneRunner fastlaneRunner lane uploadTestFlightProductionLane
